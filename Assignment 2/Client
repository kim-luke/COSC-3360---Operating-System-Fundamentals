/*
	Luke Kim - 1478875
	COSC 3360: Fundamentals of Operating Systems â€“ Assignment 2
	Due: March 25, 2020 

	This program will act as the client program, which will connect
	to the server program and send requests for the weather report 
	for a given city.
*/

#include <iostream>
#include <string>
#include <string.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <netdb.h>
#include <arpa/inet.h>
#include <unistd.h>
using namespace std;

int main() {

	int port;
	string serverName;
	string ipAddress = "";

	cout << "Enter the server host name: ";
	cin >> serverName;

	if (serverName == "localhost") {
		ipAddress = "127.0.0.1";
	}

	else {
		cout << "A server name other than 'localhost' was entered." << endl;
		return 0;
	}

	cout << "Enter the server port number: ";
	cin >> port;

	int sock = socket(AF_INET, SOCK_STREAM, 0);

	if(sock == -1) {
		return 1;
	}

	sockaddr_in hint;
	hint.sin_family = AF_INET;
	hint.sin_port = htons(port);

	// Converting string to a series of bytes which creates our hint structure
	inet_pton(AF_INET, ipAddress.c_str(), &hint.sin_addr);

	int connectRes = connect(sock, (sockaddr*)&hint, sizeof(hint));

	if (connectRes == -1) {
		return 1;
	}

	char buffer[4096];
	string userInput;
	cout << "Enter a city name: ";

	do {
		
		getline(cin, userInput);

		int sendResult = send(sock, userInput.c_str(), userInput.size() + 1, 0);
		if (sendResult == -1) {
			cout << "Could not send to server! Whoops!\r\n";
			continue;
		}

		memset(buffer, 0, 4096);
		int bytesReceived = recv(sock, buffer, 4096, 0);

		if (bytesReceived == -1) {
			cout << "There was a connection issue" << endl;
			break;
		} 

		//else {
		//	cout << string(buffer, bytesReceived) << endl;
		//}

	} while(true);

	close(sock);

	return 0;
} 
